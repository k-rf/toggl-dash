type Query {
  dashButtonAll: [DashButton!]!
  togglClientAll: [TogglClient!]!
  togglProjectByClient(id: Int!): [TogglProject!]!
}

type Mutation {
  startEntry(data: StartEntryInput): Boolean
  createDashButton(data: CreateDashButtonInput): Boolean
  deleteDashButton(data: DeleteDashButtonInput): Boolean
  registerAnnualObjective(data: RegisterAnnualObjectiveInput): Boolean
}

# Dash Button
# ------------------------------------------------------------------------------

type DashButton {
  id: ID!
  client: String!
  project: String!
  description: String!
  order: Int!
}

type TogglClient {
  id: Int!
  name: String!
}

type TogglProject {
  id: Int!
  name: String!
}

input StartEntryInput {
  dashButtonId: String!
}

input CreateDashButtonInput {
  clientId: Int!
  client: String!
  projectId: Int!
  project: String!
  description: String!
  order: Int!
}

input DeleteDashButtonInput {
  dashButtonId: String!
}

# Objective Achievement Tracker
# ------------------------------------------------------------------------------

type AnnualObjective {
  id: String!
  year: Int!
  objectives: [Objective!]!
  monthlyAvailableTimes: [MonthlyAvailableTime!]!
}

type Objective {
  clientId: Int!
  objectiveTime: [Int!]!
}

type MonthlyAvailableTime {
  month: Int!
  weekday: AvailableTime!
  holiday: AvailableTime!
  offDay: Int!
}

type AvailableTime {
  time: [Int!]!
  weight: Int!
}

input ObjectiveInput {
  clientId: Int!
  objectiveTime: [Int!]!
}

input AvailableTimeInput {
  time: [Int!]!
  weight: Int!
}

input MonthlyAvailableTimeInput {
  month: Int!
  weekday: AvailableTimeInput!
  holiday: AvailableTimeInput!
  offDay: Int!
}

input RegisterAnnualObjectiveInput {
  year: Int!
  objectives: [ObjectiveInput!]!
  MonthlyAvailableTimes: [MonthlyAvailableTimeInput!]!
}
