{
  // Place your workspaces workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Domain Primitive": {
    "scope": "typescript",
    "prefix": "dp",
    "body": [
      "import { DomainPrimitive } from \"~/shared/domain/domain-primitive\";",
      "",
      "export class $1 extends DomainPrimitive<$2, \"$1\"> {",
      "  readonly type = \"$1\";",
      "",
      "  protected validate(value: $2): $2 {",
      "    $0",
      "  }",
      "}",
      ""
    ]
  },
  "Entity": {
    "scope": "typescript",
    "prefix": "ent",
    "body": [
      "import { Entity } from \"~/shared/domain/entity\";",
      "",
      "type Props = {",
      "  $2",
      "};",
      "",
      "export class $1 extends Entity<Props, \"$1\"> {",
      "  readonly type = \"$1\";",
      "",
      "  protected validate(value: Props): Props {",
      "    $0",
      "  }",
      "}",
      ""
    ]
  },
  "Collection": {
    "scope": "typescript",
    "prefix": "col",
    "body": [
      "import { Collection } from \"~/shared/domain/collection\";",
      "",
      "export class $1Collection extends Collection<$1, \"$1Collection\"> {",
      "  readonly type = \"$1Collection\";",
      "",
      "  validate(value: $1[]): $1[] {",
      "    $0",
      "  }",
      "}",
      ""
    ]
  },
  "Uuid": {
    "scope": "typescript",
    "prefix": "uid",
    "body": [
      "import { Uuid } from \"~/shared/uuid\";",
      "",
      "export class $1 extends Uuid<\"$1\"> {",
      "  readonly type = \"$1\";",
      "}",
      ""
    ]
  },
  "Application Service Input": {
    "scope": "typescript",
    "prefix": "ain",
    "body": [
      "import { Input } from \"~/shared/application-service/input\";",
      "",
      "type Props = {",
      "  $0",
      "};",
      "",
      "export class $1 extends Input<Props, \"$1\"> {",
      "  readonly type = \"$1\";",
      "}",
      ""
    ]
  },
  "Application Service Output": {
    "scope": "typescript",
    "prefix": "aout",
    "body": [
      "import { Output } from \"~/shared/application-service/output\";",
      "",
      "type Props = {",
      "  $0",
      "};",
      "",
      "export class $1 extends Output<Props, \"$1\"> {",
      "  readonly type = \"$1\";",
      "}",
      ""
    ]
  }
}
